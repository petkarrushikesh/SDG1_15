import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.primary.withOpacity(1),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.blue800,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(5.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.black90002.withOpacity(0.4),
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray300,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 16.fSize,
          fontFamily: 'Marko One',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: Color(0XFF000000),
          fontSize: 14.fSize,
          fontFamily: 'Gugi',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray700,
          fontSize: 12.fSize,
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w400,
        ),
        displayLarge: TextStyle(
          color: appTheme.blueGray10002,
          fontSize: 64.fSize,
          fontFamily: 'Kaushan Script',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.blueA400,
          fontSize: 40.fSize,
          fontFamily: 'Lalezar',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.black90002,
          fontSize: 32.fSize,
          fontFamily: 'High Tower Text',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 28.fSize,
          fontFamily: 'Gugi',
          fontWeight: FontWeight.w400,
        ),
        headlineSmall: TextStyle(
          color: Color(0XFF000000),
          fontSize: 24.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: Color(0XFF000000),
          fontSize: 13.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: colorScheme.primary.withOpacity(1),
          fontSize: 20.fSize,
          fontFamily: 'Kurale',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.black90002,
          fontSize: 16.fSize,
          fontFamily: 'Hind',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: Color(0XFF560707),
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0X05FFFFFF),
    primaryContainer: Color(0XFFAF28DF),

    // Error colors
    errorContainer: Color(0X006DB427),
    onError: Color(0XFFFFEEEE),
    onErrorContainer: Color(0XFF181717),

    // On colors(text colors)
    onPrimary: Color(0XFF262488),
    onPrimaryContainer: Color(0XFF000B14),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber500 => Color(0XFFFFC107);

  // Black
  Color get black900 => Color(0XFF0D0D0D);
  Color get black90001 => Color(0XFF000C14);
  Color get black90002 => Color(0XFF000000);

  // Blue
  Color get blue800 => Color(0XFF0D63D1);
  Color get blueA400 => Color(0XFF2478F6);
  Color get blueA40001 => Color(0XFF2F89FC);

  // BlueGray
  Color get blueGray100 => Color(0XFFD7D7D7);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray10002 => Color(0XFFD4CEC7);
  Color get blueGray400 => Color(0XFF8D8A8A);
  Color get blueGray900 => Color(0XFF343434);

  // DeepOrange
  Color get deepOrange50 => Color(0XFFFFE8E8);
  Color get deepOrange600 => Color(0XFFF24E1E);

  // DeepPurple
  Color get deepPurpleA200 => Color(0XFF9747FF);
  Color get deepPurpleA20001 => Color(0XFF7461E5);

  // Gray
  Color get gray200 => Color(0XFFF5EDED);
  Color get gray300 => Color(0XFFDADCE0);
  Color get gray500 => Color(0XFFA87E7E);
  Color get gray50001 => Color(0XFFBE8C98);
  Color get gray600 => Color(0XFF757575);
  Color get gray700 => Color(0XFF5F6368);
  Color get gray70001 => Color(0XFF695B5B);
  Color get gray800 => Color(0XFF444444);
  Color get gray80001 => Color(0XFF3C4043);
  Color get gray900 => Color(0XFF3F2323);
  Color get gray90001 => Color(0XFF202124);

  // Green
  Color get green300 => Color(0XFF6DF47A);

  // Indigo
  Color get indigo100 => Color(0XFFBEBAED);
  Color get indigo400 => Color(0XFF7173B2);
  Color get indigo600 => Color(0XFF3036B7);
  Color get indigo900 => Color(0XFF160062);

  // LightGreen
  Color get lightGreen200 => Color(0XFFBDD8B7);
  Color get lightGreen300 => Color(0XFFA3DF7E);
  Color get lightGreen600 => Color(0XFF7BB44F);

  // Lime
  Color get lime400 => Color(0XFFE2C949);
  Color get lime500 => Color(0XFFBAE14C);
  Color get lime50001 => Color(0XFFC6E742);
  Color get lime700 => Color(0XFFA7AF4C);
  Color get lime800 => Color(0XFFB49D27);
  Color get lime900 => Color(0XFF958221);

  // PinkC
  Color get pink50C9 => Color(0XC9FCDFE4);

  // Purple
  Color get purple700 => Color(0XFF7B1FA2);
  Color get purple800 => Color(0XFF68269B);
  Color get purpleA100 => Color(0XFFF061F3);

  // Red
  Color get red200 => Color(0XFFD4A1A1);
  Color get red20001 => Color(0XFFE7A7A7);
  Color get red300 => Color(0XFFE76969);
  Color get red50 => Color(0XFFFDEFEF);
  Color get red500 => Color(0XFFEA4335);
  Color get red5001 => Color(0XFFF9F0F0);
  Color get red5002 => Color(0XFFFFF0F0);

  // Teal
  Color get teal300 => Color(0XFF6DB1A9);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
